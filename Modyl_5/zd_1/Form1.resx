<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mf0dKgP6f7gepbT0iZG5AAAAAElFTkSuQmCC
</value>
  </data>
</root>